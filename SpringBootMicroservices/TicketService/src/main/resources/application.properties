spring.application.name=TicketService
server.port=8084

spring.datasource.url = jdbc:derby:memory:myDb;create=true
#jdbc:postgresql://localhost:5432/spring
spring.datasource.username = sa
spring.datasource.password = sa
spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.schema=classpath:/schema.sql
spring.datasource.continue-on-error=true
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.DerbyDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

eureka.instance.leaseRenewalIntervalInSeconds = 10
eureka.instance.metadataMap.instanceId=${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}

eureka.instance.instanceId=${spring.application.name}:${spring.application.instance_id:${random.value}}

eureka.client.registryFetchIntervalSeconds=5
eureka.client.serviceUrl.defaultZone=http://localhost:8081/eureka
spring.cloud.service-registry.auto-registration.enabled=true
eureka.client.enabled=true
eureka.client.serviceUrl.registerWithEureka=true
spring.cloud.config.enabled=false
#test no spring config import

